global:
  labels:
    cluster: tigerbeetle

defaultPodOptions:
  automountServiceAccountToken: false
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                cluster: tigerbeetle
            topologyKey: kubernetes.io/hostname
  # TigerBeetle typically runs as root, so we won't set runAsUser/Group here
  # unless specific non-root user requirements are identified.
      
controllers:
  main:
    type: statefulset
    pod:
      securityContext:
        seccompProfile:
          type: Unconfined
    replicas: 3 # In the current version of TigerBeetle, cluster size can not be changed after creation, but this limitation will be lifted in the future.
    initContainers:
      format:
        image:
          repository: ghcr.io/tigerbeetle/tigerbeetle
          tag: "{{ .Chart.AppVersion }}"
        imagePullPolicy: IfNotPresent
        command: [ "/bin/sh","-c" ]
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          allowPrivilegeEscalation: false
          capabilities:
            add: [ "IPC_LOCK" ]
            
        args:
          - |
            set -xeuo pipefail
            REPLICA_INDEX="${HOSTNAME##*-}"
            if [ -f "/data/data.tigerbeetle" ]; then
              echo "Data file already exists, skipping format."
              exit 0
            fi
            
            echo "Formatting data file for replica index ${REPLICA_INDEX}"
            /tigerbeetle format \
              --log-debug \
              --cluster="${CLUSTER_ID}" \
              --replica-count="${REPLICA_COUNT}" \
              --replica="${REPLICA_INDEX}" \
              "/data/data.tigerbeetle"
        envFrom:
          - configMapRef:
              identifier: config
          - secretRef:
              identifier: config
    containers:
      main:
        image:
          repository: ghcr.io/tigerbeetle/tigerbeetle
          tag: "{{ .Chart.AppVersion }}"
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 10001
          allowPrivilegeEscalation: false
          capabilities:
            add: [ "IPC_LOCK" ]
    statefulset:
      podManagementPolicy: Parallel
      volumeClaimTemplates:
        - name: data
          mountPath: /data
          accessMode: "ReadWriteOnce"
          size: 1Gi
          storageClass: "" # Use default storage class or specify one
          
service:
  main:
    controller: main
    type: ClusterIP
    ports:
      http:
        port: 3000
        targetPort: 3000
        protocol: TCP
  headless:
    controller: main
    type: ClusterIP
    clusterIP: None
    publishNotReadyAddresses: true
    ports:
      http:
        port: 3000
        targetPort: 3000
        protocol: TCP

secrets:
  config:
    enabled: true
    stringData:
      CLUSTER_ID: "some-cluster-id"